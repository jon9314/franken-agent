# Note: The top-level "version" attribute is obsolete in modern Docker Compose and has been removed.

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: frankie_backend
    env_file:
      - ./backend/.env
    volumes:
      # This is the correct volume setup:
      # Mount the entire project into /frankie_codebase for the agent to access.
      - ./:/frankie_codebase
      # Separately, mount the config file into the app's running directory.
      - ./config/config.yml:/app/config/config.yml:ro
      # Use a named volume for persistent data (database, logs).
      - frankie_data:/app/data
    networks:
      - frankie_net
    restart: unless-stopped
    # The CMD command is now correctly defined and read from the backend/Dockerfile.
    # We do NOT need to specify a 'command' here, as it would override the Dockerfile.

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frankie_frontend
    # We do not need to expose a port here, because the 'proxy' service will handle it.
    networks:
      - frankie_net
    restart: unless-stopped

  proxy:
    image: caddy:2-alpine
    container_name: frankie_proxy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp" # For HTTP/3
    volumes:
      - ./proxy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - frankie_net
    restart: unless-stopped
    depends_on: # Ensures backend/frontend start before the proxy tries to connect
      - backend
      - frontend

volumes:
  frankie_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  frankie_net:
    driver: bridge