# A generic Alembic configuration file.
# Refer to the Alembic documentation for details.

[alembic]
# path to migration scripts
script_location = alembic

# Template for new migration file names, e.g. "yyyymmddhhmmss_my_message.py"
# "%(year)d%(month).2d%(day).2d%(hour).2d%(minute).2d%(second).2d_%(slug)s"
# For simpler numeric revisions:
# revision_environment = true
# file_template = %%(rev)s_%%(slug)s

# Logging configuration
# For details, see: https://alembic.sqlalchemy.org/en/latest/logging.html
# eg. logging_config_file = my_logging_config.ini

# sqlalchemy.url will be set from the application's config in env.py
# but a default can be placed here for `alembic init` or direct alembic commands.
sqlalchemy.url = sqlite:///./data/frankie.db


[post_write_hooks]
# Command(s) to run after new migration scripts are generated
# e.g. black = black %(db_path)s/versions/%(version_num)s_*.py
# hooks = black
# black.type = console
# black.executable = %(here)s/.venv/bin/black # Adjust path to your black executable
# black.arguments = %(path)s
# black.cwd = %(here)s


# Logging configuration, same as the default in Alembic
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S